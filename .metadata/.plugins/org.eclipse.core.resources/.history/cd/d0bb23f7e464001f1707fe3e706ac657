<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<link rel="stylesheet" href="../css/common.css">
<link rel="stylesheet" href="../css/reset.css">
<style type="text/css">
#idDiv, span {
	color: red;
	font-size: 9pt;
	font-weight: bold;
	padding: 10px 0 ;
	
}
</style>
</head>
<body>
	<h1 class="title">아이디 중복검사</h1>
	<div class="exec">
		<input type="text" name="user_id">
		<input type="button" id="checkId" value="중복검사">
		<div id="idDiv"></div>
	</div>
	<div class="console" ></div>
		
	<br>
	<div>
		유효성 검사는 항상 클라이언트의 몫
	</div>
</body>

<script type="text/javascript" src="http://code.jquery.com/jquery-3.7.1.min.js"></script>
<script type="text/javascript">
$(function() {
	$('#checkId').click(function() {
		// 유효성 검사
		var user_id = $('input[name="user_id"]').val();
		
		if(!user_id){
			//alert('아이디를 입력해주세요');		//alert비추천
			$('#idDiv').text('아이디를 입력해주세요');
			$('input[name="user_id"]').focus();
			return false;
		}
		
		$.get(
			'../checkId/checkId.jsp',
			{'user_id' : user_id},
			function(data) {
				//console.log(data);
				let result_text = $(data).find('result').text();		// 문자열로 넘어옴
				// eval() >> 형변환: 문자열 → 불린
				let result = eval(result_text);
				
				if(result){	// result = true 사용 중인 ID
					$('.console').html('<span>사용중인 아이디 입니다. </span>');
				} else {	
					
				}
			}
		);
		
	});
});
</script>
</html>








<!-- 
(1) $.ajax()
   $.ajax({
      url: "XML파일의 URL",
      type: "get / post",
      data: "파라미터 문자열 key=value&key=value",
      dataType: "xml",
      success: function(data) {
         ... 통신이 성공한 경우 실행되는 함수 ...
      },
      error: function(err){}
   });

data
	1. 주소 url
		 data: "파라미터 문자열 key=value&key=value",
	2. json
		{"변수":"값", "변수":"값"....}

success
	200 : OK
	
error
	404
	405 : get/post
	500 : 
	400 : 파라미터
	
	* 일반인은 에러코드를 모르기때문에 에러페이지를 만들어도 좋음 


(2) $.get() / $.post()
   $.get("url", {파라미터 json}, function(data) {
         ... XML 데이터의 처리 ...
      }, ["xml"]);

예) 
var ajax = $.get("url", {파라미터 json}, function(data) {...XML 데이터의 처리...}, ["xml"]);




(3) ajax.fail() / ajax.always()
ajax.fail(function() {
   // 404, 500 에러 등이 발생한 경우 실행될 내용
});

ajax.always(function() {
   // 통신 성공, 실패 여부에 상관없이 무조건 마지막에 호출됨
   try{}
   catch{}
   finally{서버닫음}
});
 -->


 